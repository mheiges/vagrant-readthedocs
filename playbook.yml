---
- hosts: all
  sudo: no
  vars:
    rtd_root: /var/lib/readthedocs
    venv: /var/lib/readthedocs/venv
    app_path: /var/lib/readthedocs/readthedocs.org
    superuser: mheiges
    password: jbeebee
    email: mheiges@uga.edu
  environment:
    DJANGO_SETTINGS_MODULE: readthedocs.settings.sqlite

  tasks:

    - yum: name=epel-release
      sudo: yes

    - yum: name='{{ item }}'
      sudo: yes
      with_items:
        - git
        - python-virtualenv
        - libxml2-devel
        - libxslt-devel
        - zlib-devel
        - screen

    - service: name=firewalld
               state=stopped
               enabled=no
      sudo: yes

    - file: path='{{ venv }}'
            state=directory
            owner=vagrant
            group=vagrant
            mode=0755
      sudo: yes

    - git: repo=https://github.com/rtfd/readthedocs.org.git
           dest='{{ app_path }}'
           update=no

    - pip: virtualenv='{{ venv }}'
           requirements='{{ app_path }}/requirements.txt'

    - django_manage: command=migrate
                     app_path='{{ app_path }}'
                     virtualenv='{{ venv }}'

      # get list of existing users in database
    - command: "{{ venv }}/bin/python -c 'from django.contrib.auth.models import User; from django.db.models import Q; users = User.objects.filter(Q(is_superuser=True)).distinct(); print users'"
      args:
        chdir: '{{ app_path }}'
      register: superusers

      # work around 'manage createsuperuser' not taking password as CLI option.
    - command: "{{ venv }}/bin/python -c \"from django.contrib.auth.models import User; User.objects.create_superuser('{{ superuser }}', '{{ email }}', '{{ password }}')\""
      args:
        chdir: '{{ app_path }}'
      when: superusers.stdout.find(superuser) == -1

    - django_manage: command='loaddata test_data'
                     app_path='{{ app_path }}'
                     virtualenv='{{ venv }}'

      # disable email verification for signup on this disposable, local VM.
    - lineinfile: dest='{{ app_path }}/readthedocs/settings/base.py'
                  regexp='^ACCOUNT_EMAIL_VERIFICATION.+'
                  line='ACCOUNT_EMAIL_VERIFICATION = "none"'

      # for unknown reasons, the first invocation of screen dies. So we sacrifice
      # a dummy screen before screening runserver.
    - command: 'screen -dm echo'
      sudo: yes

      # Is dangerous to run manage.py as root but ok on a disposable, local VM.
    - command: 'screen -L -dm {{ venv }}/bin/python {{ app_path }}/manage.py runserver 0.0.0.0:80'
      sudo: yes
      register: screen
